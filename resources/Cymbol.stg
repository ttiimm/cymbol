SourceFile(file, functionDeclarations, functionDefinitions) ::= <<
// Cymbol generated C
// <file.name>

#include \<stdio.h\>
#include \<stdlib.h\>
#include \<string.h\>

#include "gc.h"

<file.structs:struct(); separator="\n">
void _main();
<functionDeclarations>
<file.vars:variableDeclaration(); separator="\n">
void _main() {
    gc_init(256 * 1000000);
}

<functionDefinitions>
>>


variableDeclaration(var) ::= <<
<var.type.name> <var.name><if(var.expr)> = <var.expr><endif>;>>


struct(struct) ::= <<
struct <struct.name> {
    <struct.nested:struct(); separator="\n">
    <struct.vars:variableDeclaration(); separator="\n">
}>>


FunctionDeclarations(funcs) ::= <<
<funcs: {f |<signature(f)>;
}>
>>


FunctionDefinitions(funcs) ::= <<

<funcs: {f | <signature(f)> <f.block:Block()>}>
>>


signature(func) ::= <<
<func.type.name> <func.name>(<func.args: {arg | <arg.type.name> <arg.name>}; separator=", ">)>>


Block(block) ::= <<
{
    GC_SAVE_RP;
    <block.structs:struct()>
    <block.vars:variableDeclaration()>
    <block.vars: {v | ADD_ROOT(<v.name>);}; separator="\n">
    <block.statements: {s |<s>}; separator="\n">
    GC_RESTORE_RP;
}

>>